import psutil
import platform
from datetime import datetime
import pyfiglet
from colorama import Fore, Style, init
from tabulate import tabulate

#initializing colorama
init()

def get_sys_header():
    head = pyfiglet.figlet_format("System Info", font="slant")
    return f"{Fore.CYAN}{head}{Style.RESET_ALL}"

def get_sys_info():
    #get basic sys info
    uname = platform.uname()
    sys_info = [
        ["System", uname.system],
        ["Node Name", uname.node],
        ["Release", uname.release],
        ["Version", uname.version],
        ["Machine", uname.machine],
        ["Processor", uname.processor]
    ]
    return sys_info

def get_sys_mem():
    vm = psutil.virtual_memory()
    sys_mem = [
        ["Total", vm.total],
        ["Available", vm.available],
        ["Percent", vm.percent],
        ["Used", vm.used],
        ["Free", vm.free]
    ]
    return sys_mem

#helpers

def format_bytes(bytes, suffix="B"):
    """ Format bytes into readable format.

    Args:
        bytes (int): number of bytes
        suffix (str, optional): Defaults to "B".

    Returns:
        string: string representation of number of bytes
    """
    factor = 1024
    for unit in ["", "K", "M", "G", "T", "P"]:
        if bytes < factor:
            return f"{bytes:.2f}{unit}{suffix}"
        bytes /= factor

def main():
    print(get_sys_header())

    print(f"{Fore.GREEN}System Information:{Style.RESET_ALL}")
    print(tabulate(get_sys_info(), tablefmt="fancy_grid"))
    
    print(f"{Fore.GREEN}Memory Information:{Style.RESET_ALL}")
    sm = get_sys_mem()
    for i in sm:
        i[1] = format_bytes(i[1])
    print(tabulate(sm, tablefmt="fancy_grid"))

    print(f"\n{Fore.MAGENTA}~ Generated by zayatzy0's System Info Tool{Style.RESET_ALL}")

if __name__ == "__main__":
    main()